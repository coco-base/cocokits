diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
index 0000000000000000000000000000000000000000..13566b81b018ad684f3a35fee301741b2734c8f4
--- /dev/null
+++ b/.idea/.gitignore
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
diff --git a/.idea/1a4faebd44da4ad49cb8eabc8ee675d8.iml b/.idea/1a4faebd44da4ad49cb8eabc8ee675d8.iml
new file mode 100644
index 0000000000000000000000000000000000000000..d6ebd4805981b8400db3e3291c74a743fef9a824
--- /dev/null
+++ b/.idea/1a4faebd44da4ad49cb8eabc8ee675d8.iml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
index 0000000000000000000000000000000000000000..07115cdf15dd408d3affb9240e112578e04abf68
--- /dev/null
+++ b/.idea/misc.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
index 0000000000000000000000000000000000000000..6e931f9114f4f0e22c21358b372e8f493d6237c0
--- /dev/null
+++ b/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/1a4faebd44da4ad49cb8eabc8ee675d8.iml" filepath="$PROJECT_DIR$/.idea/1a4faebd44da4ad49cb8eabc8ee675d8.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
index 0000000000000000000000000000000000000000..43ac3adc7ca62f1f8d495d4d4e03dd840c06d442
--- /dev/null
+++ b/.idea/workspace.xml
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ChangeListManager">
+    <list default="true" id="0d89b4fe-7e74-4956-ae6e-933c29f3e004" name="Changes" comment="" />
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="GitToolBoxStore">
+    <option name="projectConfigVersion" value="5" />
+  </component>
+  <component name="ProjectColorInfo"><![CDATA[{
+  "associatedIndex": 1
+}]]></component>
+  <component name="ProjectId" id="2heZdnFt9IyAwjNtmHLy3NjgBQl" />
+  <component name="ProjectViewState">
+    <option name="autoscrollFromSource" value="true" />
+    <option name="autoscrollToSource" value="true" />
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showExcludedFiles" value="false" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "kotlin-language-version-configured": "true",
+    "nodejs_package_manager_path": "npm",
+    "vue.rearranger.settings.migration": "true"
+  }
+}]]></component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.15989.150" />
+        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-IU-241.15989.150" />
+      </set>
+    </attachedChunks>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="SwiftWorkspaceSettings">
+    <option name="detectedToolchain" value="true" />
+    <option name="toolchainPathValue" value="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain" />
+  </component>
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="0d89b4fe-7e74-4956-ae6e-933c29f3e004" name="Changes" comment="" />
+      <created>1717956593648</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1717956593648</updated>
+      <workItem from="1717956597192" duration="83000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/dist/index.js b/dist/index.js
index 1e1d060f473388e4d8ec78af0e8421b623ece19f..03a4b35f132c339f67ce30fe6df039742d28a8a5 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -1 +1 @@
-"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var src_exports={};__export(src_exports,{bail:()=>bail,build:()=>build,corePresets:()=>corePresets,executor:()=>executor,getConfig:()=>getConfig,overridePresets:()=>overridePresets,start:()=>start});module.exports=__toCommonJS(src_exports);var import_path5=require("path"),import_fs_extra4=__toESM(require("fs-extra")),import_express=__toESM(require("express")),import_node_logger=require("@storybook/node-logger"),import_esbuild_plugin_global_externals=require("@fal-works/esbuild-plugin-global-externals"),import_esbuild_plugin_pnp=require("@yarnpkg/esbuild-plugin-pnp"),import_esbuild_plugin_alias=__toESM(require("esbuild-plugin-alias")),import_core_common3=require("@storybook/core-common"),import_globals_module_info=require("@storybook/manager/globals-module-info");var import_path=require("path"),import_fs_extra=__toESM(require("fs-extra")),import_ejs=require("ejs"),getTemplatePath=async template=>(0,import_path.join)((0,import_path.dirname)(require.resolve("@storybook/builder-manager/package.json")),"templates",template),readTemplate=async template=>{let path2=await getTemplatePath(template);return import_fs_extra.default.readFile(path2,"utf8")};var renderHTML=async(template,title,favicon,customHead,cssFiles,jsFiles,features,refs,logLevel,docsOptions,tagsOptions,{versionCheck,previewUrl,configType,ignorePreview},globals)=>{let titleRef=await title,templateRef=await template,stringifiedGlobals=Object.entries(globals).reduce((transformed,[key,value])=>({...transformed,[key]:JSON.stringify(value)}),{});return(0,import_ejs.render)(templateRef,{title:titleRef?`${titleRef} - Storybook`:"Storybook",files:{js:jsFiles,css:cssFiles},favicon:await favicon,globals:{FEATURES:JSON.stringify(await features,null,2),REFS:JSON.stringify(await refs,null,2),LOGLEVEL:JSON.stringify(await logLevel,null,2),DOCS_OPTIONS:JSON.stringify(await docsOptions,null,2),CONFIG_TYPE:JSON.stringify(await configType,null,2),VERSIONCHECK:JSON.stringify(JSON.stringify(versionCheck),null,2),PREVIEW_URL:JSON.stringify(previewUrl,null,2),TAGS_OPTIONS:JSON.stringify(await tagsOptions,null,2),...stringifiedGlobals},head:await customHead||"",ignorePreview})};var import_fs_extra2=__toESM(require("fs-extra")),import_core_common=require("@storybook/core-common"),import_node_path=require("path");function slash(path2){return path2.startsWith("\\\\?\\")?path2:path2.replace(/\\/g,"/")}var sanitizeBase=path2=>path2.replaceAll(".","").replaceAll("@","").replaceAll(import_node_path.sep,"-").replaceAll("/","-").replaceAll(new RegExp(/^(-)+/g),""),sanitizeFinal=path2=>{let sections=path2.split(/-?node_modules-?/);return sections[sections.length-1].replaceAll("storybook-addon-","").replaceAll("dist-","")};async function wrapManagerEntries(entrypoints,uniqueId){return Promise.all(entrypoints.map(async(entry,i)=>{let{name,dir}=(0,import_node_path.parse)(entry),cacheLocation=(0,import_core_common.resolvePathInStorybookCache)("sb-manager",uniqueId);if(!cacheLocation)throw new Error("Could not create/find cache directory");let base=(0,import_node_path.relative)(process.cwd(),dir),location=(0,import_node_path.join)(cacheLocation,sanitizeFinal((0,import_node_path.join)(`${sanitizeBase(base)}-${i}`,`${sanitizeBase(name)}-bundle.js`)));return await import_fs_extra2.default.ensureFile(location),await import_fs_extra2.default.writeFile(location,`import '${slash(entry)}';`),location}))}var import_path2=require("path"),import_core_common2=require("@storybook/core-common");var getData=async options=>{let refs=(0,import_core_common2.getRefs)(options),favicon=options.presets.apply("favicon").then(p=>(0,import_path2.basename)(p)),features=options.presets.apply("features"),logLevel=options.presets.apply("logLevel"),title=options.presets.apply("title"),docsOptions=options.presets.apply("docs",{}),tagsOptions=options.presets.apply("tags",{}),template=readTemplate("template.ejs"),customHead=options.presets.apply("managerHead"),[instance,config]=await Promise.all([executor.get(),getConfig(options)]);return{refs,features,title,docsOptions,template,customHead,instance,config,logLevel,favicon,tagsOptions}};var safeResolve=path2=>{try{return Promise.resolve(require.resolve(path2))}catch{return Promise.resolve(!1)}};var import_fs_extra3=__toESM(require("fs-extra")),import_path3=require("path");async function readOrderedFiles(addonsDir,outputFiles){let files=await Promise.all(outputFiles?.map(async file=>{let{location,url}=sanitizePath(file,addonsDir);return await import_fs_extra3.default.ensureFile(location),await import_fs_extra3.default.writeFile(location,file.contents),url})||[]),jsFiles=files.filter(file=>file.endsWith(".js"));return{cssFiles:files.filter(file=>file.endsWith(".css")),jsFiles}}function sanitizePath(file,addonsDir){let filePath=file.path.replace(addonsDir,""),location=(0,import_path3.normalize)((0,import_path3.join)(addonsDir,filePath)),url=`./sb-addons${slash(filePath).split("/").map(encodeURIComponent).join("/")}`;return{location,url}}var import_path4=__toESM(require("path")),pluckNameFromConfigProperty=property=>{if(property)return typeof property=="string"?property:property.name},normalizePath=packagePath=>packagePath.replaceAll(import_path4.default.sep,"/"),pluckStorybookPackageFromPath=packagePath=>normalizePath(packagePath).match(/(@storybook\/.*)$/)?.[1],pluckThirdPartyPackageFromPath=packagePath=>normalizePath(packagePath).split("node_modules/")[1]??packagePath,buildFrameworkGlobalsFromOptions=async options=>{let globals={},{renderer,builder:builder2}=await options.presets.apply("core"),rendererName=pluckNameFromConfigProperty(renderer);rendererName&&(globals.STORYBOOK_RENDERER=pluckStorybookPackageFromPath(rendererName)??pluckThirdPartyPackageFromPath(rendererName));let builderName=pluckNameFromConfigProperty(builder2);builderName&&(globals.STORYBOOK_BUILDER=pluckStorybookPackageFromPath(builderName)??pluckThirdPartyPackageFromPath(builderName));let framework=pluckNameFromConfigProperty(await options.presets.apply("framework"));return framework&&(globals.STORYBOOK_FRAMEWORK=framework),globals};var compilation,asyncIterator,getConfig=async options=>{let[addonsEntryPoints,customManagerEntryPoint,tsconfigPath,envs]=await Promise.all([options.presets.apply("managerEntries",[]),safeResolve((0,import_path5.join)(options.configDir,"manager")),getTemplatePath("addon.tsconfig.json"),options.presets.apply("env")]),entryPoints=customManagerEntryPoint?[...addonsEntryPoints,customManagerEntryPoint]:addonsEntryPoints;return{entryPoints:await wrapManagerEntries(entryPoints,options.cacheKey),outdir:(0,import_path5.join)(options.outputDir||"./","sb-addons"),format:"iife",write:!1,ignoreAnnotations:!0,resolveExtensions:[".ts",".tsx",".mjs",".js",".jsx"],outExtension:{".js":".js"},loader:{".js":"jsx",".png":"dataurl",".gif":"dataurl",".jpg":"dataurl",".jpeg":"dataurl",".svg":"dataurl",".webp":"dataurl",".webm":"dataurl",".mp3":"dataurl",".woff2":"dataurl",".woff":"dataurl",".eot":"dataurl",".ttf":"dataurl"},target:["chrome100","safari15","firefox91"],platform:"browser",bundle:!0,minify:!0,sourcemap:!1,conditions:["browser","module","default"],jsxFactory:"React.createElement",jsxFragment:"React.Fragment",jsx:"transform",jsxImportSource:"react",tsconfig:tsconfigPath,legalComments:"external",plugins:[(0,import_esbuild_plugin_alias.default)({process:require.resolve("process/browser.js"),util:require.resolve("util/util.js"),assert:require.resolve("browser-assert")}),(0,import_esbuild_plugin_global_externals.globalExternals)(import_globals_module_info.globalsModuleInfoMap),(0,import_esbuild_plugin_pnp.pnpPlugin)()],banner:{js:"try{"},footer:{js:'}catch(e){ console.error("[Storybook] One of your manager-entries failed: " + import.meta.url, e); }'},define:{"process.env":JSON.stringify(envs),...(0,import_core_common3.stringifyProcessEnvs)(envs),global:"window",module:"{}"}}},executor={get:async()=>{let{build:build2}=await import("esbuild");return build2}},starter=async function*({startTime,options,router}){import_node_logger.logger.info("=> Starting manager..");let{config,favicon,customHead,features,instance,refs,template,title,logLevel,docsOptions,tagsOptions}=await getData(options);yield;let addonsDir=config.outdir;await import_fs_extra4.default.remove(addonsDir),yield,compilation=await instance({...config}),yield;let coreDirOrigin=(0,import_path5.join)((0,import_path5.dirname)(require.resolve("@storybook/manager/package.json")),"dist");router.use("/sb-addons",import_express.default.static(addonsDir,{immutable:!0,maxAge:"5m"})),router.use("/sb-manager",import_express.default.static(coreDirOrigin,{immutable:!0,maxAge:"5m"}));let{cssFiles,jsFiles}=await readOrderedFiles(addonsDir,compilation?.outputFiles),globals=await buildFrameworkGlobalsFromOptions(options);yield;let html=await renderHTML(template,title,favicon,customHead,cssFiles,jsFiles,features,refs,logLevel,docsOptions,tagsOptions,options,globals);return yield,router.use("/",({path:path2},res,next)=>{path2==="/"?res.status(200).send(html):next()}),router.use("/index.html",({path:path2},res)=>{res.status(200).send(html)}),{bail,stats:{toJson:()=>({})},totalTime:process.hrtime(startTime)}},builder=async function*({startTime,options}){if(!options.outputDir)throw new Error("outputDir is required");import_node_logger.logger.info("=> Building manager..");let{config,customHead,favicon,features,instance,refs,template,title,logLevel,docsOptions,tagsOptions}=await getData(options);yield;let addonsDir=config.outdir,coreDirOrigin=(0,import_path5.join)((0,import_path5.dirname)(require.resolve("@storybook/manager/package.json")),"dist"),coreDirTarget=(0,import_path5.join)(options.outputDir,"sb-manager");compilation=await instance({...config,minify:!0}),yield;let managerFiles=import_fs_extra4.default.copy(coreDirOrigin,coreDirTarget,{filter:src=>{let{ext}=(0,import_path5.parse)(src);return ext?ext===".js":!0}}),{cssFiles,jsFiles}=await readOrderedFiles(addonsDir,compilation?.outputFiles),globals=await buildFrameworkGlobalsFromOptions(options);yield;let html=await renderHTML(template,title,favicon,customHead,cssFiles,jsFiles,features,refs,logLevel,docsOptions,tagsOptions,options,globals);return await Promise.all([import_fs_extra4.default.writeFile((0,import_path5.join)(options.outputDir,"index.html"),html),managerFiles]),import_node_logger.logger.trace({message:"=> Manager built",time:process.hrtime(startTime)}),{toJson:()=>({})}},bail=async()=>{if(asyncIterator)try{await asyncIterator.throw(new Error)}catch{}},start=async options=>{asyncIterator=starter(options);let result;do result=await asyncIterator.next();while(!result.done);return result.value},build=async options=>{asyncIterator=builder(options);let result;do result=await asyncIterator.next();while(!result.done);return result.value},corePresets=[],overridePresets=[];0&&(module.exports={bail,build,corePresets,executor,getConfig,overridePresets,start});
+"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var src_exports={};__export(src_exports,{bail:()=>bail,build:()=>build,corePresets:()=>corePresets,executor:()=>executor,getConfig:()=>getConfig,overridePresets:()=>overridePresets,start:()=>start});module.exports=__toCommonJS(src_exports);var import_path5=require("path"),import_fs_extra4=__toESM(require("fs-extra")),import_express=__toESM(require("express")),import_node_logger=require("@storybook/node-logger"),import_esbuild_plugin_global_externals=require("@fal-works/esbuild-plugin-global-externals"),import_esbuild_plugin_pnp=require("@yarnpkg/esbuild-plugin-pnp"),import_esbuild_plugin_alias=__toESM(require("esbuild-plugin-alias")),import_core_common3=require("@storybook/core-common"),import_globals_module_info=require("@storybook/manager/globals-module-info");var import_path=require("path"),import_fs_extra=__toESM(require("fs-extra")),import_ejs=require("ejs"),getTemplatePath=async template=>(0,import_path.join)((0,import_path.dirname)(require.resolve("@storybook/builder-manager/package.json")),"templates",template),readTemplate=async template=>{let path2=await getTemplatePath(template);return import_fs_extra.default.readFile(path2,"utf8")};var renderHTML=async(template,title,favicon,customHead,cssFiles,jsFiles,features,refs,logLevel,docsOptions,tagsOptions,{versionCheck,previewUrl,configType,ignorePreview},globals)=>{let titleRef=await title,templateRef=await template,stringifiedGlobals=Object.entries(globals).reduce((transformed,[key,value])=>({...transformed,[key]:JSON.stringify(value)}),{});return(0,import_ejs.render)(templateRef,{title:titleRef?`${titleRef} - Storybook`:"Storybook",files:{js:jsFiles,css:cssFiles},favicon:await favicon,globals:{FEATURES:JSON.stringify(await features,null,2),REFS:JSON.stringify(await refs,null,2),LOGLEVEL:JSON.stringify(await logLevel,null,2),DOCS_OPTIONS:JSON.stringify(await docsOptions,null,2),CONFIG_TYPE:JSON.stringify(await configType,null,2),VERSIONCHECK:JSON.stringify(JSON.stringify(versionCheck),null,2),PREVIEW_URL:JSON.stringify(previewUrl,null,2),TAGS_OPTIONS:JSON.stringify(await tagsOptions,null,2),...stringifiedGlobals},head:await customHead||"",ignorePreview})};var import_fs_extra2=__toESM(require("fs-extra")),import_core_common=require("@storybook/core-common"),import_node_path=require("path");function slash(path2){return path2.startsWith("\\\\?\\")?path2:path2.replace(/\\/g,"/")}var sanitizeBase=path2=>path2.replaceAll(".","").replaceAll("@","").replaceAll(import_node_path.sep,"-").replaceAll("/","-").replaceAll(new RegExp(/^(-)+/g),""),sanitizeFinal=path2=>{let sections=path2.split(/-?node_modules-?/);return sections[sections.length-1].replaceAll("storybook-addon-","").replaceAll("dist-","")};async function wrapManagerEntries(entrypoints,uniqueId){return Promise.all(entrypoints.map(async(entry,i)=>{let{name,dir}=(0,import_node_path.parse)(entry),cacheLocation=(0,import_core_common.resolvePathInStorybookCache)("sb-manager",uniqueId);if(!cacheLocation)throw new Error("Could not create/find cache directory");let base=(0,import_node_path.relative)(process.cwd(),dir),location=(0,import_node_path.join)(cacheLocation,sanitizeFinal((0,import_node_path.join)(`${sanitizeBase(base)}-${i}`,`${sanitizeBase(name)}-bundle.js`)));return await import_fs_extra2.default.ensureFile(location),await import_fs_extra2.default.writeFile(location,`import '${slash(entry)}';`),location}))}var import_path2=require("path"),import_core_common2=require("@storybook/core-common");var getData=async options=>{let refs=(0,import_core_common2.getRefs)(options),favicon=options.presets.apply("favicon").then(p=>(0,import_path2.basename)(p)),features=options.presets.apply("features"),logLevel=options.presets.apply("logLevel"),title=options.presets.apply("title"),docsOptions=options.presets.apply("docs",{}),tagsOptions=options.presets.apply("tags",{}),template=readTemplate("template.ejs"),customHead=options.presets.apply("managerHead"),[instance,config]=await Promise.all([executor.get(),getConfig(options)]);return{refs,features,title,docsOptions,template,customHead,instance,config,logLevel,favicon,tagsOptions}};var safeResolve=path2=>{try{return Promise.resolve(require.resolve(path2))}catch{return Promise.resolve(!1)}};var import_fs_extra3=__toESM(require("fs-extra")),import_path3=require("path");async function readOrderedFiles(addonsDir,outputFiles){let files=await Promise.all(outputFiles?.map(async file=>{let{location,url}=sanitizePath(file,addonsDir);return await import_fs_extra3.default.ensureFile(location),await import_fs_extra3.default.writeFile(location,file.contents),url})||[]),jsFiles=files.filter(file=>file.endsWith(".js"));return{cssFiles:files.filter(file=>file.endsWith(".css")),jsFiles}}function sanitizePath(file,addonsDir){let filePath=file.path.replace(addonsDir,""),location=(0,import_path3.normalize)((0,import_path3.join)(addonsDir,filePath)),url=`./sb-addons${slash(filePath).split("/").map(encodeURIComponent).join("/")}`;return{location,url}}var import_path4=__toESM(require("path")),pluckNameFromConfigProperty=property=>{if(property)return typeof property=="string"?property:property.name},normalizePath=packagePath=>packagePath.replaceAll(import_path4.default.sep,"/"),pluckStorybookPackageFromPath=packagePath=>normalizePath(packagePath).match(/(@storybook\/.*)$/)?.[1],pluckThirdPartyPackageFromPath=packagePath=>normalizePath(packagePath).split("node_modules/")[1]??packagePath,buildFrameworkGlobalsFromOptions=async options=>{let globals={},{renderer,builder:builder2}=await options.presets.apply("core"),rendererName=pluckNameFromConfigProperty(renderer);rendererName&&(globals.STORYBOOK_RENDERER=pluckStorybookPackageFromPath(rendererName)??pluckThirdPartyPackageFromPath(rendererName));let builderName=pluckNameFromConfigProperty(builder2);builderName&&(globals.STORYBOOK_BUILDER=pluckStorybookPackageFromPath(builderName)??pluckThirdPartyPackageFromPath(builderName));let framework=pluckNameFromConfigProperty(await options.presets.apply("framework"));return framework&&(globals.STORYBOOK_FRAMEWORK=framework),globals};var compilation,asyncIterator,getConfig=async options=>{let[addonsEntryPoints,customManagerEntryPoint,tsconfigPath,envs]=await Promise.all([options.presets.apply("managerEntries",[]),safeResolve((0,import_path5.join)(options.configDir,"manager")),getTemplatePath("addon.tsconfig.json"),options.presets.apply("env")]),entryPoints=customManagerEntryPoint?[...addonsEntryPoints,customManagerEntryPoint]:addonsEntryPoints;return{entryPoints:await wrapManagerEntries(entryPoints,options.cacheKey),outdir:(0,import_path5.join)(options.outputDir||"./","sb-addons"),format:"iife",write:!1,ignoreAnnotations:!0,resolveExtensions:[".ts",".tsx",".mjs",".js",".jsx"],outExtension:{".js":".js"},loader:{".js":"jsx",".png":"dataurl",".gif":"dataurl",".jpg":"dataurl",".jpeg":"dataurl",".svg":"dataurl",".webp":"dataurl",".webm":"dataurl",".mp3":"dataurl",".woff2":"dataurl",".woff":"dataurl",".eot":"dataurl",".ttf":"dataurl"},target:["chrome100","safari15","firefox91"],platform:"browser",bundle:!0,minify:!0,sourcemap:!1,conditions:["browser","module","default"],jsxFactory:"React.createElement",jsxFragment:"React.Fragment",jsx:"transform",jsxImportSource:"react",tsconfig:tsconfigPath,legalComments:"external",plugins:[(0,import_esbuild_plugin_alias.default)({process:require.resolve("process/browser.js"),util:require.resolve("util/util.js"),assert:require.resolve("browser-assert")}),(0,import_esbuild_plugin_global_externals.globalExternals)(import_globals_module_info.globalsModuleInfoMap),(0,import_esbuild_plugin_pnp.pnpPlugin)(),require("esbuild-ts-paths")(`${process.cwd()}/tsconfig.storybook-manager-paths.json`)],banner:{js:"try{"},footer:{js:'}catch(e){ console.error("[Storybook] One of your manager-entries failed: " + import.meta.url, e); }'},define:{"process.env":JSON.stringify(envs),...(0,import_core_common3.stringifyProcessEnvs)(envs),global:"window",module:"{}"}}},executor={get:async()=>{let{build:build2}=await import("esbuild");return build2}},starter=async function*({startTime,options,router}){import_node_logger.logger.info("=> Starting manager..");let{config,favicon,customHead,features,instance,refs,template,title,logLevel,docsOptions,tagsOptions}=await getData(options);yield;let addonsDir=config.outdir;await import_fs_extra4.default.remove(addonsDir),yield,compilation=await instance({...config}),yield;let coreDirOrigin=(0,import_path5.join)((0,import_path5.dirname)(require.resolve("@storybook/manager/package.json")),"dist");router.use("/sb-addons",import_express.default.static(addonsDir,{immutable:!0,maxAge:"5m"})),router.use("/sb-manager",import_express.default.static(coreDirOrigin,{immutable:!0,maxAge:"5m"}));let{cssFiles,jsFiles}=await readOrderedFiles(addonsDir,compilation?.outputFiles),globals=await buildFrameworkGlobalsFromOptions(options);yield;let html=await renderHTML(template,title,favicon,customHead,cssFiles,jsFiles,features,refs,logLevel,docsOptions,tagsOptions,options,globals);return yield,router.use("/",({path:path2},res,next)=>{path2==="/"?res.status(200).send(html):next()}),router.use("/index.html",({path:path2},res)=>{res.status(200).send(html)}),{bail,stats:{toJson:()=>({})},totalTime:process.hrtime(startTime)}},builder=async function*({startTime,options}){if(!options.outputDir)throw new Error("outputDir is required");import_node_logger.logger.info("=> Building manager..");let{config,customHead,favicon,features,instance,refs,template,title,logLevel,docsOptions,tagsOptions}=await getData(options);yield;let addonsDir=config.outdir,coreDirOrigin=(0,import_path5.join)((0,import_path5.dirname)(require.resolve("@storybook/manager/package.json")),"dist"),coreDirTarget=(0,import_path5.join)(options.outputDir,"sb-manager");compilation=await instance({...config,minify:!0}),yield;let managerFiles=import_fs_extra4.default.copy(coreDirOrigin,coreDirTarget,{filter:src=>{let{ext}=(0,import_path5.parse)(src);return ext?ext===".js":!0}}),{cssFiles,jsFiles}=await readOrderedFiles(addonsDir,compilation?.outputFiles),globals=await buildFrameworkGlobalsFromOptions(options);yield;let html=await renderHTML(template,title,favicon,customHead,cssFiles,jsFiles,features,refs,logLevel,docsOptions,tagsOptions,options,globals);return await Promise.all([import_fs_extra4.default.writeFile((0,import_path5.join)(options.outputDir,"index.html"),html),managerFiles]),import_node_logger.logger.trace({message:"=> Manager built",time:process.hrtime(startTime)}),{toJson:()=>({})}},bail=async()=>{if(asyncIterator)try{await asyncIterator.throw(new Error)}catch{}},start=async options=>{asyncIterator=starter(options);let result;do result=await asyncIterator.next();while(!result.done);return result.value},build=async options=>{asyncIterator=builder(options);let result;do result=await asyncIterator.next();while(!result.done);return result.value},corePresets=[],overridePresets=[];0&&(module.exports={bail,build,corePresets,executor,getConfig,overridePresets,start});
