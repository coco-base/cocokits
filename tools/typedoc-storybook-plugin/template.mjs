import { Application, Reflection, PageEvent } from 'typedoc';
import { capitalizeWords, generateAnchorId, removeEscapesMarkdownText } from './utils.mjs';
import path from 'node:path';
import { workspaceRoot } from '@nx/devkit';


const STORYBOOK_GROUP_NAME = 'Utils';

/**
 * @param app {Application}
 * @param event {PageEvent<Reflection>}
 */
export function getStorybookPageContent(app, event) {

  const {contents, storybookDocPageImportPath, tocItems, title} = getContentData(app, event);

  return `
[//]: # (Do not edit directly)
[//]: # (Generated by the Cocokits TypeDoc custom theme on ${new Date().toString().replace(/\s*\(.*\)/, '')})

import { Meta } from '@storybook/addon-docs';
import { MdxPage } from '${storybookDocPageImportPath}';

export const tocItems = ${JSON.stringify(tocItems)};

<Meta title='${STORYBOOK_GROUP_NAME}/${title}'/>
<MdxPage breadcrumb='${STORYBOOK_GROUP_NAME}' title='${title}' tocItems={tocItems} hideThemeSwitcher={true}>

${contents}
</MdxPage>
`

}

/**
 * @param app {Application}
 * @param event {PageEvent<Reflection>}
 */
function getContentData(app, event) {

  const contents = event.contents.replace(/<table>/g, '<table class="arg-type-table arg-type-table--full-width">');

  const storybookDocPageImportPath = path.join(
    path.relative(app.options.getValue('out'), workspaceRoot),
    'packages/internal/storybook-addon-theme/src/lib/features/mdx-page/mdx-page'
  ).replace(/\\/g, '/');

  const tocItems = contents
    .split('\n')
    .filter(line => line.startsWith('## '))
    .map(line => line.replace('## ', '').trim())
    .map(lineWithoutHeader => ({ id: generateAnchorId(lineWithoutHeader), name: removeEscapesMarkdownText(lineWithoutHeader) }))

  const title = capitalizeWords(event.url).split('.')[0];

  return {
    contents,
    storybookDocPageImportPath,
    tocItems,
    title,
  }
}