import React, { forwardRef } from "react";

import { UIBaseComponentProps } from "@cocokits/core";
import { useUiBaseComponentConfig } from "@cocokits/react-core";

export interface <%= className %>Props extends Omit<React.HTMLAttributes<HTMLElement>, 'color' | 'type'>, UIBaseComponentProps {
  children?: React.ReactNode;
}

export const <%= className %> = forwardRef<HTMLDivElement, <%= className %>Props>(
  ({ type, size, color, additional, children, ...restProps }, ref) => {
    const { classNames, hostClassNames } = useUiBaseComponentConfig({
      componentName: "<%= propertyName %>",
      props: { type, size, color, additional },
    });

    return (
      <div ref={ref} className={hostClassNames} {...restProps}>
        {children}
      </div>
    );
  }
);

<%= className %>.displayName = '<%= className %>';
export default <%= className %>;
