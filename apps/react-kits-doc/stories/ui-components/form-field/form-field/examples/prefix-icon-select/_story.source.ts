/* eslint-disable */
// (Do not edit directly)
// (Auto generated by the Cocokits 'generate-example-story-source')

import { AddonParametersSource, ThemeId } from '@cocokits/storybook-addon-theme';

export const SOURCE: AddonParametersSource[] = [
  {
    language: 'tsx',
    filename: 'PrefixIconSelect.styled.tsx',
    code: `
import styled from "styled-components";

import { Select } from "@cocokits/react-components";

const _Select = styled(Select<'Cake' | 'Pizza' | 'Burger' | 'Steak'>)\`
  min-width: 150px;
\`;

const OptionWrapper = styled.div\`
  display: flex;
  align-items: center;
  gap: 8px;

  .cck-svg-icon {
    fill: currentColor;
  }
\`;

export const Styled = {
  Select: _Select,
  OptionWrapper
};`,
  },
  {
    language: 'tsx',
    filename: 'PrefixIconSelect.tsx',
    code: `
import { useState } from 'react';

import { Icons } from '@cocokits/common-icons';

import { FormField, Label, Option,Prefix, SvgIcon } from '@cocokits/react-components';

import { Styled } from './PrefixIconSelect.styled';


const iconMap: Record<'Cake' | 'Pizza' | 'Burger' | 'Steak', string> = {
  'Cake': Icons.cake,
  'Pizza': Icons.pizzaSlice,
  'Burger': Icons.burger,
  'Steak': Icons.steak,
};

export function PrefixIconSelect() {
  const [value, setValue] = useState<'Cake' | 'Pizza' | 'Burger' | 'Steak'>('Cake');
  
  return (
    <FormField>
      <Label>Favorite food</Label>
      <Styled.Select value={value} onChange={e => setValue(e[0])}>
        <Option value='Cake'>
          <Styled.OptionWrapper>
            <SvgIcon icon={iconMap.Cake}/>
            Cake
          </Styled.OptionWrapper>
        </Option>
        <Option value='Pizza'>
          <Styled.OptionWrapper>
            <SvgIcon icon={iconMap.Pizza}/>
            Pizza
          </Styled.OptionWrapper>
        </Option>
        <Option value='Burger'>
          <Styled.OptionWrapper>
            <SvgIcon icon={iconMap.Burger}/>
            Burger
          </Styled.OptionWrapper>
        </Option>
        <Option value='Steak'>
          <Styled.OptionWrapper>
            <SvgIcon icon={iconMap.Steak}/>
            Steak
          </Styled.OptionWrapper>
        </Option>
      </Styled.Select>
      <Prefix>
        <SvgIcon icon={iconMap[value]}/>
      </Prefix>
    </FormField>
  );
}
`,
  },
];
