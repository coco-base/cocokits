// (Do not edit directly)
// (Auto generated by the Cocokits 'generate-example-story-source' on Thu Feb 27 2025

import { AddonParametersSource, ThemeId } from '@cocokits/storybook-addon-theme';

export const SOURCE: AddonParametersSource[] = [
  {
    language: 'tsx',
    filename: 'TrailingSelectAmount.tsx',
    code: `
import { useState } from 'react';


import { FormField, Input, Label, Option, Select, Trailing } from '@cocokits/react-components';

import { formatValue, unFormatValue } from './TrailingSelectAmount.util';

export function TrailingSelectAmount() {

  const [value, setValue] = useState('');

  return (
    <FormField>
      <Label>Select amount</Label>
      <Input
        value={value}
        onFocus={() => setValue(unFormatValue(value))}
        onBlur={() => setValue(formatValue(value))}
        onChange={e => setValue(e.target.value)}/>
      <Trailing>
        <Select value="USD">
          <Option value="USD">USD</Option>
          <Option value="EUR">EUR</Option>
          <Option value="JPY">JPY</Option>
          <Option value="CNY">CNY</Option>
          <Option value="KRW">KRW</Option>
        </Select>
      </Trailing>
    </FormField>
  );
}
`,
  },
  {
    language: 'angular-ts',
    filename: 'TrailingSelectAmount.util.ts',
    code: `
export function formatValue(value: string): string {
  // Remove all commas and convert to number
  const numericValue = parseFloat(value.replace(/,/g, ''));
  
  if (isNaN(numericValue)) {
    return '';
  }
  
  // Format to have 2 decimal places and add commas for thousands
  const formattedValue = numericValue.toLocaleString('en-US', {
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  });

  return formattedValue;
}

export function unFormatValue(string: string): string {
  return string.replace(/,/g, '');
}`,
  },
];
